{"version":3,"sources":["webpack://@js-sugar/date/webpack/universalModuleDefinition","webpack://@js-sugar/date/webpack/bootstrap","webpack://@js-sugar/date/webpack/runtime/define property getters","webpack://@js-sugar/date/webpack/runtime/hasOwnProperty shorthand","webpack://@js-sugar/date/webpack/runtime/make namespace object","webpack://@js-sugar/date/./src/date/date-time.ts","webpack://@js-sugar/date/./src/date/jalaali/jalaali.ts","webpack://@js-sugar/date/./src/date/jalaali/jalaali-date-time.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","toGregorian","jy","jm","jd","this","d2g","j2d","div","a","b","mod","isValidJalaaliDate","jalaaliMonthLength","isLeapJalaaliYear","jalCal","leap","jump","march","n","i","breaks","bl","length","gy","leapJ","jp","Error","r","g2d","d2j","jdn","k","gm","gd","d","j","toJalaali","toString","getDate","getMonth","getFullYear","date","set","datetime","gDate","Jalaali","Date","hour","minute","millisecond","unit","year","month","day","second","getTime","add","amounts","gDateTemp","setDate","Math","abs","days","setMonth","months","setFullYear","years","result","JalaaliDateTime","jdate","subtract","isAfter","dateTime","gDate1","gDate2","isSameOrAfter","isBefore","isSameOrBefore","clone","format","_string","diff","jDatetime","gStartDayOfTheYear","lastDayOfYear","isLeapYear","startDayOfTheYear","week1","week2","ceil"],"mappings":"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","file":"jalaali.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@js-sugar/date\"] = factory();\n\telse\n\t\troot[\"@js-sugar/date\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface DateTimeDescriptor {\r\n    year: number;\r\n    month: number;\r\n    day: number;\r\n    hour: number;\r\n    minute: number;\r\n    second: number;\r\n    millisecond: number;\r\n}\r\n\r\nexport interface DateTimeAmounts {\r\n    years: number;\r\n    months: number;\r\n    days: number;\r\n    hours: number;\r\n    minutes: number;\r\n    seconds: number;\r\n    milliseconds: number;\r\n}\r\n\r\nexport abstract class DateTime {\r\n    abstract get(unit: 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'ms'): number;\r\n    abstract set(value: DateTimeDescriptor): DateTime;\r\n    abstract toGregorian(datetime: DateTime): Date;\r\n    abstract add(amounts: DateTimeAmounts): DateTime;\r\n    abstract subtract(amounts: DateTimeAmounts): DateTime;\r\n    abstract isAfter(dateTime: DateTime): boolean;\r\n    abstract isSameOrAfter(dateTime: DateTime): boolean;\r\n    abstract isBefore(dateTime: DateTime): boolean;\r\n    abstract isSameOrBefore(dateTime: DateTime): boolean;\r\n    abstract clone(): DateTime;\r\n    abstract format(input: string): string;\r\n    abstract diff(datetime: DateTime): number;\r\n    abstract get dayOfWeek(): number;\r\n    abstract get weeksInYear(): number;\r\n    abstract get weekYear(): number;\r\n    abstract get isLeapYear(): boolean;\r\n    abstract get quarter(): number;\r\n}\r\n","\r\nexport abstract class Jalaali {\r\n\r\n    public static toGregorian(jy: any, jm: any, jd: any) {\r\n        return this.d2g(this.j2d(jy, jm, jd))\r\n    }\r\n    private static div(a: any, b: any) {\r\n        return ~~(a / b)\r\n    }\r\n\r\n    private static mod(a: any, b: any) {\r\n        return a - ~~(a / b) * b\r\n    }\r\n    public static isValidJalaaliDate(jy:any, jm: any, jd: any) {\r\n        return jy >= -61 && jy <= 3177 &&\r\n            jm >= 1 && jm <= 12 &&\r\n            jd >= 1 && jd <= this.jalaaliMonthLength(jy, jm)\r\n    }\r\n    public static isLeapJalaaliYear(jy: any) {\r\n        return this.jalCal(jy).leap === 0\r\n    }\r\n\r\n    public static jalaaliMonthLength(jy: any, jm: any) {\r\n        if (jm <= 6) return 31\r\n        if (jm <= 11) return 30\r\n        if (this.isLeapJalaaliYear(jy)) return 30\r\n        return 29\r\n    }\r\n    private static jalCal(jy: string | any) {\r\n        // Jalaali years starting the 33-year rule.\r\n        var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210\r\n            , 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178\r\n        ]\r\n            , bl = breaks.length\r\n            , gy = jy + 621\r\n            , leapJ = -14\r\n            , jp = breaks[0]\r\n            , jm\r\n            , jump\r\n            , leap\r\n            , leapG\r\n            , march\r\n            , n\r\n            , i\r\n\r\n        if (jy < jp || jy >= breaks[bl - 1])\r\n            throw new Error('Invalid Jalaali year ' + jy)\r\n\r\n        // Find the limiting years for the Jalaali year jy.\r\n        for (i = 1; i < bl; i += 1) {\r\n            jm = breaks[i]\r\n            jump = jm - jp\r\n            if (jy < jm)\r\n                break\r\n            leapJ = leapJ + this.div(jump, 33) * 8 + this.div(this.mod(jump, 33), 4)\r\n            jp = jm\r\n        }\r\n        n = jy - jp\r\n\r\n        // Find the number of leap years from AD 621 to the beginning\r\n        // of the current Jalaali year in the Persian calendar.\r\n        leapJ = leapJ + this.div(n, 33) * 8 + this.div(this.mod(n, 33) + 3, 4)\r\n        if (this.mod(jump, 33) === 4 && jump - n === 4)\r\n            leapJ += 1\r\n\r\n        // And the same in the Gregorian calendar (until the year gy).\r\n        leapG = this.div(gy, 4) - this.div((this.div(gy, 100) + 1) * 3, 4) - 150\r\n\r\n        // Determine the Gregorian date of Farvardin the 1st.\r\n        march = 20 + leapJ - leapG\r\n\r\n        // Find how many years have passed since the last leap year.\r\n        if (jump - n < 6)\r\n            n = n - jump + this.div(jump + 4, 33) * 33\r\n        leap = this.mod(this.mod(n + 1, 33) - 1, 4)\r\n        if (leap === -1) {\r\n            leap = 4\r\n        }\r\n\r\n        return {\r\n            leap: leap\r\n            , gy: gy\r\n            , march: march\r\n        }\r\n    }\r\n    private static j2d(jy: any, jm: any, jd: any) {\r\n        var r = this.jalCal(jy)\r\n        return this.g2d(r.gy, 3, r.march) + (jm - 1) * 31 - this.div(jm, 7) * (jm - 7) + jd - 1\r\n    }\r\n    private static d2j(jdn: any) {\r\n        var gy = this.d2g(jdn).gy // Calculate Gregorian year (gy).\r\n            , jy = gy - 621\r\n            , r = this.jalCal(jy)\r\n            , jdn1f = this.g2d(gy, 3, r.march)\r\n            , jd\r\n            , jm\r\n            , k\r\n\r\n        // Find number of days that passed since 1 Farvardin.\r\n        k = jdn - jdn1f\r\n        if (k >= 0) {\r\n            if (k <= 185) {\r\n                // The first 6 months.\r\n                jm = 1 + this.div(k, 31)\r\n                jd = this.mod(k, 31) + 1\r\n                return {\r\n                    jy: jy\r\n                    , jm: jm\r\n                    , jd: jd\r\n                }\r\n            } else {\r\n                // The remaining months.\r\n                k -= 186\r\n            }\r\n        } else {\r\n            // Previous Jalaali year.\r\n            jy -= 1\r\n            k += 179\r\n            if (r.leap === 1)\r\n                k += 1\r\n        }\r\n        jm = 7 + this.div(k, 30)\r\n        jd = this.mod(k, 30) + 1\r\n        return {\r\n            jy: jy\r\n            , jm: jm\r\n            , jd: jd\r\n        }\r\n    }\r\n    private static g2d(gy: any, gm: any, gd: any) {\r\n        var d = this.div((gy + this.div(gm - 8, 6) + 100100) * 1461, 4)\r\n            + this.div(153 * this.mod(gm + 9, 12) + 2, 5)\r\n            + gd - 34840408\r\n        d = d - this.div(this.div(gy + 100100 + this.div(gm - 8, 6), 100) * 3, 4) + 752\r\n        return d\r\n    }\r\n\r\n    private static d2g(jdn: any) {\r\n        var j\r\n            , i\r\n            , gd\r\n            , gm\r\n            , gy\r\n        j = 4 * jdn + 139361631\r\n        j = j + this.div(this.div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908\r\n        i = this.div(this.mod(j, 1461), 4) * 5 + 308\r\n        gd = this.div(this.mod(i, 153), 5) + 1\r\n        gm = this.mod(this.div(i, 153), 12) + 1\r\n        gy = this.div(j, 1461) - 100100 + this.div(8 - gm, 6)\r\n        return {\r\n            gy: gy\r\n            , gm: gm\r\n            , gd: gd\r\n        }\r\n    }\r\n    public static toJalaali(gy: any, gm: any, gd: any) {\r\n        if (Object.prototype.toString.call(gy) === '[object Date]') {\r\n            gd =  gy.getDate()\r\n            gm = gy.getMonth() + 1\r\n            gy = gy.getFullYear()\r\n        }\r\n        return this.d2j(this.g2d(gy, gm, gd))\r\n    }\r\n}","import { DateTime, DateTimeAmounts, DateTimeDescriptor } from '../date-time';\r\nimport { Jalaali } from './jalaali';\r\n\r\nexport class JalaaliDateTime extends DateTime {\r\n    private year: number;\r\n    private month: number;\r\n    private day: number;\r\n    private hour: number;\r\n    private minute: number;\r\n    private second: number;\r\n    private millisecond: number;\r\n    constructor(date?: DateTimeDescriptor) {\r\n        super();\r\n        if (date) {\r\n            this.set(date);\r\n        }\r\n    }\r\n    toGregorian(datetime: DateTime): Date {\r\n        const gDate = Jalaali.toGregorian(datetime.get('year'), datetime.get('month'), datetime.get('day'));\r\n        return new Date(gDate.gy, gDate.gm, gDate.gd,\r\n            this.hour, this.minute, this.millisecond);\r\n    }\r\n    get(unit: 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'ms'): number {\r\n        switch (unit) {\r\n            case 'year':\r\n                return this.year;\r\n            case 'month':\r\n                return this.month;\r\n            case 'day':\r\n                return this.day;\r\n            case 'hour':\r\n                return this.hour;\r\n            case 'minute':\r\n                return this.minute;\r\n            case 'second':\r\n                return this.second;\r\n            case 'ms':\r\n                return this.millisecond;\r\n            default:\r\n                return this.toGregorian(this).getTime();\r\n        }\r\n    }\r\n    set(value: DateTimeDescriptor): DateTime {\r\n        this.year = value.year;\r\n        this.month = value.month;\r\n        this.day = value.day;\r\n        this.hour = value.hour;\r\n        this.minute = value.minute;\r\n        this.second = value.second;\r\n        this.millisecond = value.millisecond;\r\n        return this;\r\n    }\r\n    add(amounts: DateTimeAmounts): DateTime {\r\n        const gDateTemp = Jalaali.toGregorian(this.year, this.month, this.day);\r\n        const gDate = new Date(gDateTemp.gy, gDateTemp.gm, gDateTemp.gd);\r\n        gDate.setDate(Math.abs(gDate.getDate() + amounts.days));\r\n        gDate.setMonth(Math.abs(gDate.getMonth() + amounts.months));\r\n        gDate.setFullYear(Math.abs(gDate.getFullYear() + amounts.years));\r\n        const result = new JalaaliDateTime();\r\n        const jdate = Jalaali.toJalaali(gDate.getFullYear(), gDate.getMonth(), gDate.getDate());\r\n        result.year = jdate.jy;\r\n        result.month = jdate.jm;\r\n        result.day = jdate.jd;\r\n        result.hour = this.hour;\r\n        result.minute = this.minute;\r\n        result.second = this.second;\r\n        result.millisecond = this.millisecond;\r\n\r\n        return result;\r\n    }\r\n    subtract(amounts: DateTimeAmounts): DateTime {\r\n        const gDateTemp = Jalaali.toGregorian(this.year , this.month , this.day);\r\n        const gDate = new Date(gDateTemp.gy, gDateTemp.gm, gDateTemp.gd);\r\n        if (amounts.days !== 0) {\r\n            gDate.setDate(gDate.getDate() - amounts.days);\r\n        }\r\n        if (amounts.months !== 0) {\r\n            gDate.setMonth(gDate.getMonth() - amounts.months);\r\n        }\r\n        if (amounts.years !== 0) {\r\n            gDate.setFullYear(gDate.getFullYear() - amounts.years);\r\n        }\r\n        const result = new JalaaliDateTime();\r\n        const jdate = Jalaali.toJalaali(gDate.getFullYear(), gDate.getMonth(), gDate.getDate());\r\n        result.year = jdate.jy;\r\n        result.month = jdate.jm;\r\n        result.day = jdate.jd;\r\n        result.hour = this.hour;\r\n        result.minute = this.minute;\r\n        result.second = this.second;\r\n        result.millisecond = this.millisecond;\r\n        return result;\r\n    }\r\n    isAfter(dateTime: DateTime): boolean {\r\n        const gDate1 = this.toGregorian(dateTime);\r\n        const gDate2 = this.toGregorian(this);\r\n        return gDate1.getTime() > gDate2.getTime() ? true : false;\r\n    }\r\n    isSameOrAfter(dateTime: DateTime): boolean {\r\n        const gDate1 = this.toGregorian(dateTime);\r\n        const gDate2 = this.toGregorian(this);\r\n        return gDate1.getTime() >= gDate2.getTime() ? true : false;\r\n    }\r\n    isBefore(dateTime: DateTime): boolean {\r\n        const gDate1 = this.toGregorian(dateTime);\r\n        const gDate2 = this.toGregorian(this);\r\n        return gDate1.getTime() < gDate2.getTime() ? true : false;\r\n    }\r\n    isSameOrBefore(dateTime: DateTime): boolean {\r\n        const gDate1 = this.toGregorian(dateTime);\r\n        const gDate2 = this.toGregorian(this);\r\n        return gDate1.getTime() <= gDate2.getTime() ? true : false;\r\n    }\r\n    clone(): DateTime {\r\n        const result = new JalaaliDateTime();\r\n        result.year = this.year;\r\n        result.month = this.month;\r\n        result.day = this.day;\r\n        result.hour = this.hour;\r\n        result.minute = this.minute;\r\n        result.second = this.second;\r\n        result.millisecond = this.millisecond;\r\n        return result;\r\n    }\r\n    format(_string: any): string {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    diff(datetime: DateTime): number {\r\n        const gDate = new Date(this.toGregorian(this));\r\n        const jDatetime = Jalaali.toGregorian(datetime.get('year'),\r\n            datetime.get('month'),\r\n            datetime.get('day'));\r\n        const gStartDayOfTheYear = new Date(jDatetime.gy, jDatetime.gm, jDatetime.gd);\r\n        return ((gDate.getTime() - gStartDayOfTheYear.getTime()));\r\n    }\r\n    get dayOfWeek(): number {\r\n        const gDate = new Date(this.toGregorian(this));\r\n        return gDate.getDate() % 7;\r\n    }\r\n    get weeksInYear(): number {\r\n        const lastDayOfYear = new JalaaliDateTime();\r\n        lastDayOfYear.year = this.year;\r\n        lastDayOfYear.month = 12;\r\n        lastDayOfYear.day = 29;\r\n        if (this.isLeapYear) {\r\n            lastDayOfYear.day = 30;\r\n        }\r\n        const gDate = new Date(this.toGregorian(lastDayOfYear));\r\n        const startDayOfTheYear = Jalaali.toGregorian(this.year, 1, 1);\r\n        const gStartDayOfTheYear = new Date(startDayOfTheYear.gy, startDayOfTheYear.gm, startDayOfTheYear.gd);\r\n        const week1 = gDate.getTime() + (1000 * 60 * 60 * 24);\r\n        const week2 = gStartDayOfTheYear.getTime();\r\n        return Math.ceil((week1 - week2) / (1000 * 60 * 60 * 24 * 7));\r\n    }\r\n    get weekYear(): number {\r\n        const gDate = new Date(this.toGregorian(this));\r\n        const startDayOfTheYear = Jalaali.toGregorian(this.year, 1, 1);\r\n        const gStartDayOfTheYear = new Date(startDayOfTheYear.gy, startDayOfTheYear.gm, startDayOfTheYear.gd);\r\n        const week1 = gDate.getTime() + (1000 * 60 * 60 * 24);\r\n        const week2 = gStartDayOfTheYear.getTime();\r\n        return Math.ceil((week1 - week2) / (1000 * 60 * 60 * 24 * 7));\r\n    }\r\n    get isLeapYear(): boolean {\r\n        return (Jalaali.isLeapJalaaliYear(this.year));\r\n    }\r\n    get quarter(): number {\r\n        if (1 <= this.month && this.month <= 3) {\r\n            return 1;\r\n        } else if (4 <= this.month && this.month <= 6) {\r\n            return 2;\r\n        } else if (7 <= this.month && this.month <= 9) {\r\n            return 3;\r\n        }\r\n        return 4;\r\n    }\r\n\r\n}\r\n"],"sourceRoot":""}